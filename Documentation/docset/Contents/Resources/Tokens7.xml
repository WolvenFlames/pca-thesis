<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PCAPatientTableViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PCAPatientTableViewController</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PCAPatientTableViewController.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/executeQuery</TokenIdentifier>
			<Abstract type="html">Executes the Catalyze query on esasEntry classes
If the user is in the doctor&apos;s ACL, this will return values
It then filters to the most recent for each unique ID and saves them to an instance var</Abstract>
			<DeclaredIn>PCAPatientTableViewController.h</DeclaredIn>
			
			<Declaration>- (void)executeQuery</Declaration>
			
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/executeQuery</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/queryUserTranslations</TokenIdentifier>
			<Abstract type="html">Runs a CatalyzeQuery to get &quot;translations&quot; for the user&apos;s names and IDs</Abstract>
			<DeclaredIn>PCAPatientTableViewController.h</DeclaredIn>
			
			<Declaration>- (void)queryUserTranslations</Declaration>
			
			
			<Anchor>//api/name/queryUserTranslations</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/viewDidLoad</TokenIdentifier>
			<Abstract type="html">When the view loads, execute the query</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (void)viewDidLoad</Declaration>
			
			
			<Anchor>//api/name/viewDidLoad</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/filterRecentValuesToProvider</TokenIdentifier>
			<Abstract type="html">Removes recent values from the class variable unless their provider
id matches the current user&apos;s id</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (void)filterRecentValuesToProvider</Declaration>
			
			
			<Anchor>//api/name/filterRecentValuesToProvider</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/sortRecentEntriesByUrgency</TokenIdentifier>
			<Abstract type="html">Reorganizes the recent values in the class variable according to number of
urgent symptoms</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (void)sortRecentEntriesByUrgency</Declaration>
			
			
			<Anchor>//api/name/sortRecentEntriesByUrgency</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/countUrgentSymptoms:</TokenIdentifier>
			<Abstract type="html">Counts the number of urgent symptoms in a dictionary. Essentially counts the number of 1&apos;s</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (int)countUrgentSymptoms:(id)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">NSMutableDictionary* dictionary to count</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">int</Abstract></ReturnValue>
			<Anchor>//api/name/countUrgentSymptoms:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/urgentSum:</TokenIdentifier>
			<Abstract type="html">Computes the number of urgent entries in the given entry</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (int)urgentSum:(id)entry</Declaration>
			<Parameters>
				<Parameter>
					<Name>entry</Name>
					<Abstract type="html">Full CatalyzeEntry (not just the urgents dictionary!)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">urgentSum int representing how many symptoms are urgent</Abstract></ReturnValue>
			<Anchor>//api/name/urgentSum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/tableView:didSelectRowAtIndexPath:</TokenIdentifier>
			<Abstract type="html">Event triggered when doctor clicks a patient&apos;s name</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (void)tableView:(id)tableView didSelectRowAtIndexPath:(id)indexPath</Declaration>
			<Parameters>
				<Parameter>
					<Name>tableView</Name>
					<Abstract type="html">UITableView*</Abstract>
				</Parameter><Parameter>
					<Name>indexPath</Name>
					<Abstract type="html">NSIndexPath representing the specific cell clicked</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/tableView:didSelectRowAtIndexPath:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCAPatientTableViewController/logoutPressed:</TokenIdentifier>
			<Abstract type="html">Called when the user presses the logout button. Sends the user back to the login screen and disengages Catalyze</Abstract>
			<DeclaredIn>PCAPatientTableViewController.m</DeclaredIn>
			
			<Declaration>- (IBAction)logoutPressed:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">id of the pressed button</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">IBAction</Abstract></ReturnValue>
			<Anchor>//api/name/logoutPressed:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>