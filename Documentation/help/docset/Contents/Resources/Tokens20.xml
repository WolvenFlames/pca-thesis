<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/Catalyze.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/Catalyze</TokenIdentifier>
			<Abstract type="html">The catalyze.io iOS SDK is the preferred way of interacting with the catalyze.io
API when developing for iOS.  Functionalities include user, session, custom classes and data,
as well as querying management.  You can also find a guide for developing with the catalyze.io
iOS SDK on the github repo.  This guide walks you through some of the most common
ways to use the SDK with code examples.</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
            
			
			<NodeRef refid="20"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Catalyze/setApiKey:applicationId:</TokenIdentifier>
			<Abstract type="html">the app key given to developers for this specific app on http://developer.catalyze.io</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
			
			<Declaration>+ (void)setApiKey:(id)apiKey applicationId:(id)appId</Declaration>
			<Parameters>
				<Parameter>
					<Name>appId</Name>
					<Abstract type="html">the id of the application on the catalyze.io API</Abstract>
				</Parameter><Parameter>
					<Name>applicationKey</Name>
					<Abstract type="html">the app key given to developers for this specific app on http://developer.catalyze.io</Abstract>
				</Parameter><Parameter>
					<Name>scheme</Name>
					<Abstract type="html">the url scheme used for login callbacks that redirects a user back to their application on successful authentication</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setApiKey:applicationId:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Catalyze/setApiKey:applicationId:baseUrl:</TokenIdentifier>
			<Abstract type="html">the app key given to developers for this specific app on http://developer.catalyze.io</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
			
			<Declaration>+ (void)setApiKey:(id)apiKey applicationId:(id)appId baseUrl:(id)baseUrl</Declaration>
			<Parameters>
				<Parameter>
					<Name>appId</Name>
					<Abstract type="html">the id of the application on the catalyze.io API</Abstract>
				</Parameter><Parameter>
					<Name>baseUrl</Name>
					<Abstract type="html">the base URL of the BaaS deployment you are using</Abstract>
				</Parameter><Parameter>
					<Name>applicationKey</Name>
					<Abstract type="html">the app key given to developers for this specific app on http://developer.catalyze.io</Abstract>
				</Parameter><Parameter>
					<Name>scheme</Name>
					<Abstract type="html">the url scheme used for login callbacks that redirects a user back to their application on successful authentication</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setApiKey:applicationId:baseUrl:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Catalyze/apiKey</TokenIdentifier>
			<Abstract type="html">the app key set by the developer in application:didFinishLaunchingWithOptions:</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
			
			<Declaration>+ (NSString *)apiKey</Declaration>
			
			<ReturnValue><Abstract type="html">the app key set by the developer in application:didFinishLaunchingWithOptions:</Abstract></ReturnValue>
			<Anchor>//api/name/apiKey</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Catalyze/applicationId</TokenIdentifier>
			<Abstract type="html">the app id set by the developer in application:didFinishLaunchingWithOptions:</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
			
			<Declaration>+ (NSString *)applicationId</Declaration>
			
			<ReturnValue><Abstract type="html">the app id set by the developer in application:didFinishLaunchingWithOptions:</Abstract></ReturnValue>
			<Anchor>//api/name/applicationId</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Catalyze/setLoggingLevel:</TokenIdentifier>
			<Abstract type="html">Set the default logging level for all network requests. If set to kLoggingLevelOff, all logging will stop. If set to any other
value, logging will be automatically turned on.</Abstract>
			<DeclaredIn>Catalyze.h</DeclaredIn>
			
			<Declaration>+ (void)setLoggingLevel:(id)level</Declaration>
			
			
			<Anchor>//api/name/setLoggingLevel:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
        
        
	</File>
</Tokens>