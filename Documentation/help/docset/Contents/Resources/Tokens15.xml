<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFStreamingMultipartFormData.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFStreamingMultipartFormData</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
            
			
			<NodeRef refid="15"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithFileURL:name:error:</TokenIdentifier>
			<Abstract type="html">Appends the HTTP header Content-Disposition: file; filename=#{generated filename}; name=#{name}&quot; and Content-Type: #{generated mimeType}, followed by the encoded file data and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (BOOL)appendPartWithFileURL:(id)fileURL name:(id)name error:(id)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The URL corresponding to the file whose content will be appended to the form. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to be associated with the specified data. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occurs, upon return contains an NSError object that describes the problem.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the file data was successfully appended, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/appendPartWithFileURL:name:error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithFileURL:name:fileName:mimeType:error:</TokenIdentifier>
			<Abstract type="html">Appends the HTTP header Content-Disposition: file; filename=#{filename}; name=#{name}&quot; and Content-Type: #{mimeType}, followed by the encoded file data and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (BOOL)appendPartWithFileURL:(id)fileURL name:(id)name fileName:(id)fileName mimeType:(id)mimeType error:(id)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The URL corresponding to the file whose content will be appended to the form. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to be associated with the specified data. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>fileName</Name>
					<Abstract type="html">The file name to be used in the Content-Disposition header. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>mimeType</Name>
					<Abstract type="html">The declared MIME type of the file data. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occurs, upon return contains an NSError object that describes the problem.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the file data was successfully appended otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/appendPartWithFileURL:name:fileName:mimeType:error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithInputStream:name:fileName:length:mimeType:</TokenIdentifier>
			<Abstract type="html">Appends the HTTP header Content-Disposition: file; filename=#{filename}; name=#{name}&quot; and Content-Type: #{mimeType}, followed by the data from the input stream and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (void)appendPartWithInputStream:(id)inputStream name:(id)name fileName:(id)fileName length:(id)length mimeType:(id)mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>inputStream</Name>
					<Abstract type="html">The input stream to be appended to the form data</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to be associated with the specified input stream. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>fileName</Name>
					<Abstract type="html">The filename to be associated with the specified input stream. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>length</Name>
					<Abstract type="html">The length of the specified input stream in bytes.</Abstract>
				</Parameter><Parameter>
					<Name>mimeType</Name>
					<Abstract type="html">The MIME type of the specified data. (For example, the MIME type for a JPEG image is image/jpeg.) For a list of valid MIME types, see http://www.iana.org/assignments/media-types/. This parameter must not be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendPartWithInputStream:name:fileName:length:mimeType:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithFileData:name:fileName:mimeType:</TokenIdentifier>
			<Abstract type="html">Appends the HTTP header Content-Disposition: file; filename=#{filename}; name=#{name}&quot; and Content-Type: #{mimeType}, followed by the encoded file data and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (void)appendPartWithFileData:(id)data name:(id)name fileName:(id)fileName mimeType:(id)mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">The data to be encoded and appended to the form data.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to be associated with the specified data. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>fileName</Name>
					<Abstract type="html">The filename to be associated with the specified data. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>mimeType</Name>
					<Abstract type="html">The MIME type of the specified data. (For example, the MIME type for a JPEG image is image/jpeg.) For a list of valid MIME types, see http://www.iana.org/assignments/media-types/. This parameter must not be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendPartWithFileData:name:fileName:mimeType:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithFormData:name:</TokenIdentifier>
			<Abstract type="html">Appends the HTTP headers Content-Disposition: form-data; name=#{name}&quot;, followed by the encoded data and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (void)appendPartWithFormData:(id)data name:(id)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">The data to be encoded and appended to the form data.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name to be associated with the specified data. This parameter must not be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendPartWithFormData:name:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/appendPartWithHeaders:body:</TokenIdentifier>
			<Abstract type="html">Appends HTTP headers, followed by the encoded data and the multipart form boundary.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (void)appendPartWithHeaders:(id)headers body:(id)body</Declaration>
			<Parameters>
				<Parameter>
					<Name>headers</Name>
					<Abstract type="html">The HTTP headers to be appended to the form data.</Abstract>
				</Parameter><Parameter>
					<Name>body</Name>
					<Abstract type="html">The data to be encoded and appended to the form data.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendPartWithHeaders:body:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFStreamingMultipartFormData/throttleBandwidthWithPacketSize:delay:</TokenIdentifier>
			<Abstract type="html">Throttles request bandwidth by limiting the packet size and adding a delay for each chunk read from the upload stream.</Abstract>
			<DeclaredIn>AFURLRequestSerialization.m</DeclaredIn>
			
			<Declaration>- (void)throttleBandwidthWithPacketSize:(id)numberOfBytes delay:(id)delay</Declaration>
			<Parameters>
				<Parameter>
					<Name>numberOfBytes</Name>
					<Abstract type="html">Maximum packet size, in number of bytes. The default packet size for an input stream is 16kb.</Abstract>
				</Parameter><Parameter>
					<Name>delay</Name>
					<Abstract type="html">Duration of delay each time a packet is read. By default, no delay is set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/throttleBandwidthWithPacketSize:delay:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
        
        
	</File>
</Tokens>