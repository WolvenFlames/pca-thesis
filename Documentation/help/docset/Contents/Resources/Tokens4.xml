<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PCALoginViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PCALoginViewController</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/setUsernameField:</TokenIdentifier>
			<Abstract type="html">UITextfield for username</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *usernameField</Declaration>
			
			
			<Anchor>//api/name/usernameField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/usernameField</TokenIdentifier>
			<Abstract type="html">UITextfield for username</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *usernameField</Declaration>
			
			
			<Anchor>//api/name/usernameField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PCALoginViewController/usernameField</TokenIdentifier>
			<Abstract type="html">UITextfield for username</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *usernameField</Declaration>
			
			
			<Anchor>//api/name/usernameField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/setPasswordField:</TokenIdentifier>
			<Abstract type="html">UITextfield for password</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *passwordField</Declaration>
			
			
			<Anchor>//api/name/passwordField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/passwordField</TokenIdentifier>
			<Abstract type="html">UITextfield for password</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *passwordField</Declaration>
			
			
			<Anchor>//api/name/passwordField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PCALoginViewController/passwordField</TokenIdentifier>
			<Abstract type="html">UITextfield for password</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) IBOutlet UITextField *passwordField</Declaration>
			
			
			<Anchor>//api/name/passwordField</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/setAppDel:</TokenIdentifier>
			<Abstract type="html">AppDelegate reference for defObj</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property PCAAppDelegate *appDel</Declaration>
			
			
			<Anchor>//api/name/appDel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/appDel</TokenIdentifier>
			<Abstract type="html">AppDelegate reference for defObj</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property PCAAppDelegate *appDel</Declaration>
			
			
			<Anchor>//api/name/appDel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PCALoginViewController/appDel</TokenIdentifier>
			<Abstract type="html">AppDelegate reference for defObj</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>@property PCAAppDelegate *appDel</Declaration>
			
			
			<Anchor>//api/name/appDel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/loginPressed:</TokenIdentifier>
			<Abstract type="html">Called when login button is pressed by user</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>- (IBAction)loginPressed:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">id of login button</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">IBAction</Abstract></ReturnValue>
			<Anchor>//api/name/loginPressed:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/signupPressed:</TokenIdentifier>
			<Abstract type="html">Called when signup pressed. Segues to signup controller</Abstract>
			<DeclaredIn>PCALoginViewController.h</DeclaredIn>
			
			<Declaration>- (IBAction)signupPressed:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract type="html">id of signup button</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">IBAction</Abstract></ReturnValue>
			<Anchor>//api/name/signupPressed:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/viewWillAppear:</TokenIdentifier>
			<Abstract type="html">Called before view appears. Used to empty the password field</Abstract>
			<DeclaredIn>PCALoginViewController.m</DeclaredIn>
			
			<Declaration>- (void)viewWillAppear:(id)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>animated</Name>
					<Abstract type="html">BOOL</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/viewWillAppear:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/touchesBegan:withEvent:</TokenIdentifier>
			<Abstract type="html">Called when touches begin. Used to hide keyboard</Abstract>
			<DeclaredIn>PCALoginViewController.m</DeclaredIn>
			
			<Declaration>- (void)touchesBegan:(id)touches withEvent:(id)event</Declaration>
			<Parameters>
				<Parameter>
					<Name>touches</Name>
					<Abstract type="html">NSSet* of touches</Abstract>
				</Parameter><Parameter>
					<Name>event</Name>
					<Abstract type="html">UIEvent*</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/touchesBegan:withEvent:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/completeLoginSegue</TokenIdentifier>
			<Abstract type="html">Called when finished logging in. Segues to the main view controller.</Abstract>
			<DeclaredIn>PCALoginViewController.m</DeclaredIn>
			
			<Declaration>- (void)completeLoginSegue</Declaration>
			
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/completeLoginSegue</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/prepareForSegue:sender:</TokenIdentifier>
			<Abstract type="html">Called before executing a segue. Determines whether to execute doctor query early</Abstract>
			<DeclaredIn>PCALoginViewController.m</DeclaredIn>
			
			<Declaration>- (void)prepareForSegue:(id)segue sender:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>segue</Name>
					<Abstract type="html">to be executed</Abstract>
				</Parameter><Parameter>
					<Name>sender</Name>
					<Abstract type="html">id of sender</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/prepareForSegue:sender:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PCALoginViewController/validateInput</TokenIdentifier>
			<Abstract type="html">Ensures that the length of inputted username and password is at least 1</Abstract>
			<DeclaredIn>PCALoginViewController.m</DeclaredIn>
			
			<Declaration>- (BOOL)validateInput</Declaration>
			
			<ReturnValue><Abstract type="html">BOOL</Abstract></ReturnValue>
			<Anchor>//api/name/validateInput</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>